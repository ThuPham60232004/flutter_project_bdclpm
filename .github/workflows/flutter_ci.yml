name: 🚀 Flutter CI/CD

on:
  push:
    branches:
      - develop
      - staging
      - master/production

jobs:
  # B1: Test và phân tích code
  test:
    name: ✅ Test and Analyze
    runs-on: ubuntu-22.04

    steps:
      - name: 🛠 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: 🚀 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔍 Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: 🧪 Run tests
        run: flutter test --coverage

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: 📢 Notify Slack - Test Completed
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ Test and analysis completed successfully!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

  # B2: Build Android App
  build-android:
    name: 📦 Build Android App
    needs: test
    runs-on: ubuntu-22.04

    steps:
      - name: 🛠 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: 🚀 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🏗️ Build debug APK
        run: flutter build apk --debug

      - name: 📤 Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: build/app/outputs/flutter-apk/app-debug.apk

      - name: 📢 Notify Slack - Build Completed
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ Build completed successfully!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

  # B3: Firebase Test Lab (CHỈ CHẠY TRÊN staging)
  firebase-test-lab:
    name: 🔍 Run UI Tests on Firebase Test Lab
    needs: build-android
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: 🛠 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: app-debug

      - name: 🔑 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCLOUD_AUTH }}'

      - name: ⚙️ Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: 📥 Install beta components
        run: |
          gcloud components install beta --quiet
          gcloud components update --quiet

      - name: 🧪 Run tests in Firebase Test Lab
        run: |
          BUCKET_NAME="testflutter"
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          gcloud firebase test android run \
            --type robo \
            --app app-debug/app-debug.apk \
            --device model=Pixel2,version=28,locale=en \
            --timeout 300s \
            --results-bucket=gs://$BUCKET_NAME \
            --results-dir=results-$TIMESTAMP \
            --quiet

      - name: 📢 Notify Slack - Firebase Test Completed
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ Firebase Test completed for staging!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

  # B4: Deploy code từ develop -> staging nếu pass CI/CD
  merge-to-staging:
    name: 🔀 Merge develop → staging
    needs: [test, build-android]
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: 🔀 Create Pull Request to Staging
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUBTOKEN }}
          base: staging
          branch: develop
          title: "🔀 Merge develop → staging"
          body: "This PR is auto-generated after successful CI/CD execution."

  # B5: Deploy code từ staging -> master/production nếu pass CI/CD
  merge-to-master:
    name: 🔀 Merge staging → master/production
    needs: firebase-test-lab
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: 🔀 Create Pull Request to Master
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUBTOKEN }}
          base: master/production
          branch: staging
          title: "🔀 Merge staging → master/production"
          body: "This PR is auto-generated after successful CI/CD execution."

  # B6: Deploy to Play Store
  deploy-play-store:
    name: 🚀 Deploy to Play Store
    needs: merge-to-master
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/master/production' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: 🔧 Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: 🚀 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'
          cache: true

      - name: 🔑 Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: 🏗️ Build Release AAB
        run: |
          flutter pub get
          flutter build appbundle --release

      # - name: 📤 Deploy to Play Store
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
      #     packageName: com.example.flutter_getx_boilerplate
      #     releaseFiles: build/app/outputs/bundle/release/app-release.aab
      #     track: internal
      #     status: completed
      #     changesNotSentForReview: false
